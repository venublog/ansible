# Install SQL 2016

- name: set up sqladmin user
  win_user:
    name: "{{ mssql_username }}"
    password: "{{ mssql_password }}"
    password_never_expires: True
    state: present
    groups:
      - Administrators

- name: install .Net
  win_feature:
    name: "{{ item }}"
    state: present
    include_sub_features: True
    include_management_tools: True
  with_items:
    - NET-Framework-Core
    - NET-Framework-Features
  register: install_dotnet
  until: install_dotnet is success
  delay: 3
  retries: 5

- name: create directory structure
  win_file:
    path: "{{ item }}"
    state: directory
  with_items:
    - C:\Backup
    - C:\Databases
    - C:\UserDatabases
    - C:\iso_download

#- name: check ISO file
#  win_stat:
#    path: "{{ iso_path }}"
#  register: iso_file
#  when: (":" in iso_path)
#
#- name: download ISO file
#  win_get_url:
#    dest: "{{ iso_path }}"
#    url: "{{ iso_url }}"
#  register: download_iso
#  until: download_iso is success
#  delay: 3
#  retries: 5
#  when: (":" in iso_path) and (not iso_file.stat.exists)
#- name: get s3 file
#  aws_s3:
#    aws_access_key: AKIAJM3SBEF3PKO6FI4A
#    aws_secret_key: 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
#    bucket: mssql2016-test
#    object: SQLServer2016SP1-FullSlipstream-x64-ENU.iso
#    dest: /tmp/win_mssql_2016.iso
#    mode: get
#  delegate_to: localhost
#
- name: copy to win server
  win_copy:
    src: /tmp/win_mssql_2016.iso
    dest: C:\iso_download\win_mssql_2016.iso

- name: mount iso
  win_disk_image:
    #image_path: "{{ iso_path }}"
    image_path: C:\iso_download\win_mssql_2016.iso
    state: present
  register: disk_image_out

- import_tasks: "{{ install_with }}.yml"
  when: ansible_version.full | version_compare('2.4', '>=')

- include: "{{ install_with }}.yml"
  when: ansible_version.full | version_compare('2.4', '<')

- name: unmount iso
  win_disk_image:
    #image_path: "{{ iso_path }}"
    image_path: C:\iso_download\win_mssql_2016.iso
    state: absent

- name: copy script file
  win_copy:
    src: enableSQLTCP.ps1
    dest: c:\enableSQLTCP.ps1

- name: enable tcp on SQL server instance
  win_shell: c:\enableSQLTCP.ps1

- name: delete the script
  win_file:
    path: c:\enableSQLTCP.ps1
    state: absent

- name: restart SQL Server instance
  win_service:
    name: MSSQLSERVER
    state: restarted
    force_dependent_services: yes
